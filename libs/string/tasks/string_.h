#ifndef UNTITLED1_STRING__H
#define UNTITLED1_STRING__H

#include <stdlib.h>
#include <ctype.h>

// возвращает количество символов в строке (не считая ноль-символ)
size_t strlen_(const char *begin);

// возвращает указатель на первый элемент с кодом ch, расположенным на ленте памяти между адресами begin и end не
// включая end. Если символ не найден, возращается значение end.
char *find(char *begin, char *end, int ch);

// возвращает указатель на первый символ, отличный от пробельных, расположенный на ленте памяти,
// начиная с begin и заканчивая ноль-символом. Если символ не найден, возвращается адрес первого ноль-символа.
char *findNonSpace(char *begin);

// возвращает указатель на первый пробельный символ, расположенный на ленте памяти начиная с адреса begin
// или на первый ноль-символ.
char *findSpace(char *begin);

// возвращает указатель на первый справа символ, отличный от пробельных, расположенный на ленте памяти, начиная с
// rbegin (последний символ строки, за которым следует ноль-символ) и заканчивая rend
// (адрес символа перед началом строки). Если символ не найден, возвращается адрес rend.
char *findNonSpaceReverse(char *r_begin, const char *r_end);

// возвращает указатель на первый пробельный символ справа, расположенный на ленте памяти, начиная с rbegin и заканчивая
// rend. Если символ не найден, возвращается адрес rend.
char *findSpaceReverse(char *r_begin, const char *r_end);

// Функция возвращает отрицательное значение, если lhs располагается до rhs в лексикографическом
// порядке (как в словаре), значение 0, если lhs и rhs равны, иначе – положительное значение
int strcmp(const char *lhs, const char *rhs);

#endif
